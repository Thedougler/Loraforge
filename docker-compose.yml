services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      target: build
    ports:
      - "8088:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    command: sh -c "npm run dev -- --host"

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql://loraforge_user:loraforge_password@db:5432/loraforge_db
      - POSTGRES_USER=loraforge_user
      - POSTGRES_PASSWORD=loraforge_password
      - POSTGRES_DB=loraforge_db
    command: sh -c "./wait-for-db.sh db 'uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload'"
    volumes:
      - ./backend:/app
      - loraforge_data:/data

  db:
    container_name: db
    image: postgres
    environment:
      POSTGRES_DB: loraforge_db
      POSTGRES_USER: loraforge_user
      POSTGRES_PASSWORD: loraforge_password
    volumes:
      - db_data3:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis
    volumes:
      - redis_data:/data

  worker:
    container_name: worker
    build:
      context: .
      dockerfile: backend/Dockerfile.worker
    command: celery -A app.worker worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://loraforge_user:loraforge_password@db:5432/loraforge_db
    depends_on:
      - redis
    volumes:
      - ./backend:/app
      - loraforge_data:/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

volumes:
  loraforge_data:
  db_data3:
  redis_data:
